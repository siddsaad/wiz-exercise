name: CD - Set Image on EKS

on:
  push:
    tags: ["v*.*.*"] # deploy on version tags (e.g., v1.0.0)
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: prod
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
      DEPLOYMENT: ${{ secrets.K8S_DEPLOYMENT }}
      CONTAINER: ${{ secrets.K8S_CONTAINER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Kubeconfig
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER" --region "$AWS_REGION"

      - name: Compute image for this tag
        id: img
        run: |
          ACC=$(aws sts get-caller-identity --query Account --output text)
          echo "image=$ACC.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Dry run (show diff)
        run: |
          kubectl -n "$NAMESPACE" set image deploy/"$DEPLOYMENT" "$CONTAINER"=${{ steps.img.outputs.image }} \
            --record --dry-run=server -o yaml

      - name: Update Deployment image
        run: |
          kubectl -n "$NAMESPACE" set image deploy/"$DEPLOYMENT" "$CONTAINER"=${{ steps.img.outputs.image }} --record
          kubectl -n "$NAMESPACE" rollout status deploy/"$DEPLOYMENT" --timeout=180s
