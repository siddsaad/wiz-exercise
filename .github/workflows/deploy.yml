name: CD - Set Image on EKS (immutable digest)

on:
  push:
    tags: ["v*.*.*"] # deploy on version tags (e.g., v1.0.7)
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: prod
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
      DEPLOYMENT: ${{ secrets.K8S_DEPLOYMENT }}
      CONTAINER: ${{ secrets.K8S_CONTAINER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Kubeconfig
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER" --region "$AWS_REGION"

      - name: Wait for image tag to exist in ECR (max 5 min)
        env:
          REPO: ${{ env.ECR_REPOSITORY }}
          TAG: ${{ github.ref_name }}
          REGION: ${{ env.AWS_REGION }}
        run: |
          echo "Waiting for $REPO:$TAG in $REGION ..."
          for i in {1..60}; do
            if aws ecr describe-images --repository-name "$REPO" --image-ids imageTag="$TAG" --region "$REGION" >/dev/null 2>&1; then
              echo "Found $REPO:$TAG"
              exit 0
            fi
            echo "Not found yet (attempt $i). Sleeping 5s..."
            sleep 5
          done
          echo "ERROR: $REPO:$TAG not found in ECR after waiting."
          exit 1

      - name: Resolve tag to immutable digest
        id: img
        env:
          REPO: ${{ env.ECR_REPOSITORY }}
          TAG: ${{ github.ref_name }}
          REGION: ${{ env.AWS_REGION }}
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name "$REPO" \
            --image-ids imageTag="$TAG" \
            --query 'imageDetails[0].imageDigest' \
            --output text --region "$REGION")
          ACC=$(aws sts get-caller-identity --query Account --output text)
          echo "image=$ACC.dkr.ecr.$REGION.amazonaws.com/$REPO@$DIGEST" >> $GITHUB_OUTPUT
          echo "Resolved image: $ACC.dkr.ecr.$REGION.amazonaws.com/$REPO@$DIGEST"

      - name: Show diff (server dry-run)
        run: |
          kubectl -n "$NAMESPACE" set image deploy/"$DEPLOYMENT" "$CONTAINER"=${{ steps.img.outputs.image }} \
            --dry-run=server -o yaml

      - name: Update Deployment image (immutable)
        run: |
          kubectl -n "$NAMESPACE" set image deploy/"$DEPLOYMENT" "$CONTAINER"=${{ steps.img.outputs.image }}
          kubectl -n "$NAMESPACE" rollout status deploy/"$DEPLOYMENT" --timeout=180s
